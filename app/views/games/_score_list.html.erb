<table>

  <br>

  <h2>Total Scores (Current Month)</h2>
  <table>
    <thead>
    <tr>
      <th>#</th>
      <!--<th>Game</th>-->
      <th>Score</th>


      <th>Player</th>
      <th>Credits (All Time)</th>
      <th>Every Day Logins</th>

    </tr>
    </thead>
    <tbody>
    <% no = 0 %>

    <% #ScoreHistory.order(amount: :desc).take(100).each do |score|
       #ScoreHistory.select("date(created_at) as ordered_date, sum(amount) as total_price").group("date(created_at)").each do |score|
       #ScoreHistory.select("date(created_at) as ordered_date, sum(amount) as total_price").each do |score|
       #ScoreHistory.joins(:user).select("amount, sum(amount) as total_price").group("amount").each do |score|

       #ScoreHistory.find_by_sql("SELECT games.title as gtitle, users.full_name as fname, sum(amount) as sum_amount FROM score_histories
       #INNER JOIN users ON users.id = score_histories.user_id
       #INNER JOIN games ON games.id = score_histories.game_id
       #GROUP BY games.title, users.full_name ORDER BY games.title, sum_amount DESC, users.full_name").each do |score|
       ScoreHistory.joins(:user, :game).#includes(:login_histories).
       #         .find_by_sql("SELECT g.title as gtitle, u.full_name as fname, sum(amount) as sum_amount
       # FROM score_histories sc, users u, games g WHERE u.id = sc.user_id AND g.id = sc.game_id
       # GROUP BY g.title, u.full_name
       # ORDER BY g.title, sum_amount DESC, u.full_name ")
       select("games.title as gtitle, users.credits as credits, users.full_name as fname, users.id as uid, sum(amount) as sum_amount").group("users.full_name").order("sum_amount DESC, credits DESC").take(11).each do |score|
    %>
        <tr>
          <% no+=1
             no=no%=10 %>
          <td><%= no == 0 ? 10 : no %>)</td>
          <!--<td><%= score.try(:gtitle) %></td>-->
          <td><%= score.try(:sum_amount) %></td>

          <td><%= score.try(:fname) %></td>
          <td><%= score.try(:credits) %></td>
          <td><%= score.try(:logins) %></td>
          <td><%= LoginHistory.find_by(user_id: score.uid).count %></td>
        </tr>
    <% end %>
    </tbody>
  </table>


  <br><br>

  <h2>Top 10 List (Current Month)</h2>

  <% gid = 0
     Game.order(:title).each do |game| %>

      <h2><%= gid += 1 %>. <%= game.try(:title) %></h2>
      <table>
        <thead>
        <tr>
          <th>#</th>
          <th>Player</th>
          <th>Score</th>
        </tr>
        </thead>
        <tbody>
        <%
           days_in_month = Time.days_in_month(Time.now.month-1, Time.now.year) #.months_ago(1).month)
           dt_utc = DateTime.now.utc #.months_ago(1) prev month
           dt1 = DateTime.new(dt_utc.year, dt_utc.month, 1)#.strftime("%Y-%m-%d")
           dt2 = DateTime.new(dt_utc.year, dt_utc.month, days_in_month)#.strftime("%Y-%m-%d")
           no = 0
           ScoreHistory.find_by_sql("SELECT *, SUM(sc.amount) as sum, COUNT(u.id) as count_user FROM score_histories sc, users u, games g
       WHERE g.id = sc.game_id and u.id = sc.user_id AND g.id = #{game.try(:id)} AND sc.created_at >= '#{dt1}' AND sc.created_at <= '#{dt2}'
       GROUP BY g.title, u.full_name
       ORDER BY g.title, sum DESC limit 10
                                ").each do |score|
             #              HAVING sc.created_at > #{dt1} AND sc.created_at < #{dt2}

             #WHERE date(sc.created_at ,'%Y-%m-%d') >= #{dt1} AND date(sc.created_at) <= #{dt2} AND g.id = sc.game_id and u.id = sc.user_id AND g.id = #{game.try(:id)}
             # sc.created_at >= #{dt1} AND sc.created_at <= #{dt2}
             #ScoreHistory.includes(:game).select("date(created_at) as ordered_date, sum(amount) as sum_amount").
             #group("game.title, sum_amount").having("sum(amount) > ?", 100).each do |score|
             #ScoreHistory.includes(:game, :user).group("games.title, users.full_name").each do |score|
             #where(games:{id:1}).
             #where(users: {id:1} ).group().each do |score|
             #ScoreHistory.find_by_sql("SELECT sc.*,count(sc.id) num FROM score_histories sc GROUP BY num HAVING count(sc.id) <= 3 ").each do |score|
        %>
            <tr>

              <td><%= gid %>.<%= no+=1 %>)</td>
              <!--<td><%= score.try(:count_user) %></td>-->
              <!--<td><%= score.try(:game).try(:title) %>|</td>-->

              <td><%= score.try(:user).try(:full_name) %></td>
              <td><%= score.try(:sum) %></td>


            </tr>
        <% end %>
        </tbody>
      </table>
  <% end %>

  <br>
  <br>

  <br><br>

  <h2>Pot for a Prize</h2>
  <table>
    <thead>
    <tr>
      <th>#</th>
      <th>Game</th>
      <th>Player</th>
      <th>Score</th>
    </tr>
    </thead>
    <tbody>
    <% gid = 0
       Game.order(:title).each do |game| %>


        <%
           gid += 1
           no = 0

           ScoreHistory.find_by_sql("SELECT *, SUM(sc.amount) as sum, COUNT(u.id) as count_user FROM score_histories sc, users u, games g
       WHERE g.id = sc.game_id and u.id = sc.user_id AND g.id = #{game.try(:id)}
       GROUP BY g.title, u.full_name ORDER BY g.title, sum DESC limit 10
                                ").each do |score|
        %>
            <tr>


              <% if current_user.full_name == score.user.full_name+"" %>
                  <td><%= gid %></td>
                  <td><%= game.try(:title) %></td>
                  <td><%= "YOU (#{score.user.full_name})" %></td>
                  <td>&nbsp<%= score.try(:sum) %></td>
              <% else %>

              <% end %>
            </tr>
        <% end %>
    <% end %>
    <tr>
      <td></td>
      <td></td>
      <td>Total Scores</td>
      <td><%= ScoreHistory.find_by_sql("SELECT SUM(sc.amount) as sum FROM score_histories sc, users u
       WHERE u.id = sc.user_id AND u.id = #{current_user.id}
       GROUP BY u.full_name ORDER BY sum DESC
                                ").first.sum %></td>
    </tr>
  </table>
  <br><br>


  <h2>Top 10 of Every Day Login</h2>
  <table>
    <thead>
    <tr>
      <th>#</th>
      <th>Player</th>
      <th>Logins/month</th>
    </tr>
    </thead>
    <tbody>
    <% gid = 0
       days_in_month = Time.days_in_month(Time.now.month-1, Time.now.year) #.months_ago(1).month)
       dt_utc = DateTime.now.utc #.months_ago(1) prev month
       dt1 = DateTime.new(dt_utc.year, dt_utc.month, 1)#.strftime("%Y-%m-%d")
       dt2 = DateTime.new(dt_utc.year, dt_utc.month, days_in_month)#.strftime("%Y-%m-%d")

       time_range = dt1..dt2
       LoginHistory.
              joins(:user).
       where('created_at' => time_range).
# where("created_at >= ? AND created_at <= ? ", dt1, dt2).
               select("users.full_name as fname, users.id as uid, count(count) as login_count").
               group("users.full_name").
               order("login_count DESC").
               #take(10).
               limit(10).
               each do |login|
         gid += 1
    %>

        <tr>
          <td><%= gid %></td>
          <td><%= login.try(:user).try(:full_name) %></td>
          <td><%= login.try(:fname) %></td>
          <td>&nbsp<%= login.try(:login_count) %></td>
        </tr>
    <% end %>
     
  </table>
  <br><br>